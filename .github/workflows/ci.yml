name: CI/CD Microservices

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-build-test:
    name: Lint, Build & Test Services
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [auth-service, order-service, product-service, notification-service]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: services/${{ matrix.service }}
        run: npm ci

      - name: Run Linter
        working-directory: services/${{ matrix.service }}
        run: npm run lint --if-present

      - name: Run Tests
        working-directory: services/${{ matrix.service }}
        run: npm run test --if-present

      - name: Build project
        working-directory: services/${{ matrix.service }}
        run: npm run build --if-present

#   docker-build-push:
#     name: Build & Push Docker Images
#     runs-on: ubuntu-latest
#     needs: lint-build-test

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build & Push Images
#         run: |
#           for service in auth-service order-service product-service notification-service; do
#             docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$service:latest ./services/$service
#             docker push ${{ secrets.DOCKERHUB_USERNAME }}/$service:latest
#           done

#   deploy:
#     name: Deploy to Server
#     runs-on: ubuntu-latest
#     needs: docker-build-push
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: SSH to server and deploy
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USER }}
#           key: ${{ secrets.SERVER_SSH_KEY }}
#           script: |
#             cd /path/to/microservices
#             docker-compose pull
#             docker-compose up -d --remove-orphans
